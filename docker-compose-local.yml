services:
  postgres:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_PASSWORD=localpassword
      - POSTGRES_USER=dbuser
      - POSTGRES_DB=troopconnect
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    networks:
      - dev_network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - dev_network

  web:
    build:
      context: .
      dockerfile: app/Dockerfile.dev
    image: troopconnect-dev:latest
    command: uv run /app/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/app
    ports:
      - "8000:8000"
    environment:
      - PATH=/venv/bin:$PATH
      - DEBUG=True
      - POSTGRES_PASSWORD=localpassword
      - POSTGRES_USER=dbuser
    depends_on:
      - postgres
      - redis
    networks:
      - dev_network

  celery:
    image: troopconnect-dev
    command: celery -A troopconnect worker -l INFO
    volumes:
      - ./app/:/app
      - celery_data:/tmp
    environment:
      - PATH=/venv/bin:$PATH
      - DEBUG=True
      - POSTGRES_PASSWORD=localpassword
      - POSTGRES_USER=localuser
      - POSTGRES_DB=troopconnect
      - POSTGRES_HOST=postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_WORKER_STATE_DB=/tmp/celery-worker-state.db
    depends_on:
      - postgres
      - redis
      - web
    networks:
      - dev_network

  celery-beat:
    image: troopconnect-dev
    command: celery -A troopconnect beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - ./app/:/app
      - celery_data:/tmp
    environment:
      - PATH=/venv/bin:$PATH
      - DEBUG=True
      - POSTGRES_PASSWORD=localpassword
      - POSTGRES_USER=localuser
      - POSTGRES_DB=troopconnect
      - POSTGRES_HOST=postgres
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_WORKER_STATE_DB=/tmp/celery-worker-state.db
    depends_on:
      - postgres
      - redis
      - web
    networks:
      - dev_network

networks:
  dev_network:

volumes:
  postgres_data_dev:
  celery_data:
