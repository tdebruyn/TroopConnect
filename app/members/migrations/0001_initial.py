# Generated by Django 5.2 on 2025-05-23 16:34

import django.db.models.deletion
import django.utils.timezone
import members.models
import phonenumber_field.modelfields
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('min_age_dec_31', models.PositiveSmallIntegerField(blank=True, help_text="Age des membres les plus jeunes de la section au 31 décembre de l'année scolaire", null=True)),
                ('max_age_dec_31', models.PositiveSmallIntegerField(blank=True, help_text="Age des membres les plus âgés de la section au 31 décembre de l'année scolaire", null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ParentChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('primary_contact', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short', models.CharField(max_length=2, unique=True)),
                ('name', models.CharField(max_length=30, unique=True)),
                ('description', models.TextField()),
                ('is_primary', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.IntegerField(help_text='Calendar year from the start of the time period', unique=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('range', models.CharField(max_length=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('sex', models.CharField(blank=True, choices=[('M', 'Garçon'), ('F', 'Fille')], max_length=1, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='BE')),
                ('totem', models.CharField(blank=True, max_length=60, null=True)),
                ('photo_consent', models.BooleanField(default=False)),
                ('note', models.TextField(blank=True, max_length=500)),
                ('status', models.CharField(choices=[('a', 'Active'), ('ar', 'Archived'), ('r', 'Requested')], default='r', max_length=2)),
                ('parents', models.ManyToManyField(blank=True, related_name='children', through='members.ParentChild', through_fields=('child', 'parent'), to='members.person')),
                ('primary_role', models.ForeignKey(default=members.models.default_role, limit_choices_to={'is_primary': True}, on_delete=django.db.models.deletion.PROTECT, related_name='primary_persons', to='members.role')),
            ],
        ),
        migrations.AddField(
            model_name='parentchild',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_child', to='members.person'),
        ),
        migrations.AddField(
            model_name='parentchild',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_parent', to='members.person'),
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='members.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_assigned', models.DateField(default=django.utils.timezone.now)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.person')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.role')),
            ],
            options={
                'unique_together': {('person', 'role')},
            },
        ),
        migrations.AddField(
            model_name='person',
            name='roles',
            field=models.ManyToManyField(blank=True, related_name='people', through='members.PersonRole', to='members.role'),
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30, null=True)),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('B', 'Both')], max_length=1, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='members.branch')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='parentchild',
            unique_together={('parent', 'child')},
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.person')),
                ('school_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.schoolyear')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='members.section')),
            ],
            options={
                'unique_together': {('user', 'section', 'school_year')},
            },
        ),
    ]
