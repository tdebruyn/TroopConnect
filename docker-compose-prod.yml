services:
  caddy:
    env_file: "/tmp/myapp.env"
    build:
      context: caddy
      args:
        - LETSENCRYPT_CONTACT_EMAIL=${LETSENCRYPT_CONTACT_EMAIL}
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - "${PROJECT_DIR}/static:/vol/static"
      - "${PROJECT_DIR}/media:/vol/media"
    networks:
      - shared_net
    depends_on:
      - troopconnect

  postgres:
    image: postgres:latest
    restart: always
    env_file: "/tmp/myapp.env"
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=troopconnect
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shared_net

  redis:
    image: redis:alpine
    restart: always
    networks:
      - shared_net

  troopconnect:
    build:
      context: .
    restart: always
    env_file: "/tmp/myapp.env"
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/troopconnect
      - CELERY_BROKER_URL=redis://redis:6379/0
    volumes:
      - "${PROJECT_DIR}/static:/app/static"
      - "${PROJECT_DIR}/media:/app/media"
    networks:
      - shared_net
    depends_on:
      - postgres
      - redis

  celery:
    build:
      context: .
    restart: always
    env_file: "/tmp/myapp.env"
    command: celery -A troopconnect worker -l INFO
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/troopconnect
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - shared_net
    depends_on:
      - postgres
      - redis

  celery-beat:
    build:
      context: .
    restart: always
    env_file: "/tmp/myapp.env"
    command: celery -A troopconnect beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/troopconnect
      - CELERY_BROKER_URL=redis://redis:6379/0
    networks:
      - shared_net
    depends_on:
      - postgres
      - redis

networks:
  shared_net:
    external: true

volumes:
  caddy_data:
  caddy_config:
  postgres_data:
